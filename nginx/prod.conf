# Mapa para conexiones WebSocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name apigateway-mg13.onrender.com;

    # Configuración de timeouts (ajustados para producción)
    proxy_connect_timeout 75s;
    proxy_send_timeout 75s;
    proxy_read_timeout 75s;

    # Headers de seguridad
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Eliminar TODAS las cabeceras CORS del backend para evitar duplicación
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Credentials;
    proxy_hide_header Access-Control-Max-Age;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Vary;

    # Configuración CORS solo desde el API Gateway
    add_header Access-Control-Allow-Origin "https://frontend-etu0.onrender.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With, X-User-ID, X-User-Email" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "3600" always;

    # Manejo de preflight requests (OPTIONS)
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Configuración para WebSockets (Chat)
    location ^~ /ws/chat/ {
        proxy_pass             https://services-chat-4he7.onrender.com;
        proxy_http_version     1.1;
        proxy_set_header       Upgrade            $http_upgrade;
        proxy_set_header       Connection         $connection_upgrade;
        proxy_set_header       Host               services-chat.onrender.com;
        proxy_set_header       X-Real-IP          $remote_addr;
        proxy_set_header       X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header       X-Forwarded-Proto  $scheme;
        proxy_read_timeout     3600s;
        proxy_ssl_server_name  on;
    }

    # USERS: Endpoints públicos
    location ~ ^/microservice-users/(login|register|logout|reset-password)/?$ {
        rewrite ^/microservice-users/(.*)$ /$1 break;
        proxy_pass         https://services-users.onrender.com;
        proxy_set_header   Host              services-users.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_ssl_server_name on;
    }

    # USERS: Refresh token
    location = /microservice-users/token/refresh/ {
        proxy_pass         https://services-users.onrender.com/token/refresh/;
        proxy_set_header   Host              services-users.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_ssl_server_name on;
    }

    # USERS: Validar token (endpoint interno)
    location = /microservice-users/validate-token/ {
        internal;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        
        proxy_pass         https://services-users.onrender.com/validate-token/;
        proxy_set_header   Host              services-users.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Authorization     $http_authorization;
        proxy_ssl_server_name on;
    }

    # USERS: Rutas protegidas
    location /microservice-users/ {
        auth_request           /microservice-users/validate-token/;
        auth_request_set       $user_id    $upstream_http_x_user_id;
        auth_request_set       $user_email $upstream_http_x_user_email;

        rewrite ^/microservice-users/(.*)$ /$1 break;
        proxy_pass         https://services-users.onrender.com/;
        proxy_set_header   Host              services-users.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Authorization     $http_authorization;
        proxy_set_header   X-User-ID         $user_id;
        proxy_set_header   X-User-Email      $user_email;
        proxy_ssl_server_name on;
    }

    # COMMUNITY: Rutas protegidas
    location /microservice-community/ {
        auth_request           /microservice-users/validate-token/;
        auth_request_set       $user_id    $upstream_http_x_user_id;
        auth_request_set       $user_email $upstream_http_x_user_email;

        rewrite ^/microservice-community/(.*)$ /$1 break;
        proxy_pass         https://services-community.onrender.com/;
        proxy_set_header   Host              services-community.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Authorization     $http_authorization;
        proxy_set_header   X-User-ID         $user_id;
        proxy_set_header   X-User-Email      $user_email;
        proxy_ssl_server_name on;
    }

    # PUBLICATIONS: Rutas protegidas
    location /microservice-publication/ {
        auth_request           /microservice-users/validate-token/;
        auth_request_set       $user_id    $upstream_http_x_user_id;
        auth_request_set       $user_email $upstream_http_x_user_email;

        rewrite ^/microservice-publication/(.*)$ /$1 break;
        proxy_pass         https://services-publications.onrender.com/;
        proxy_set_header   Host              services-publications.onrender.com;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Authorization     $http_authorization;
        proxy_set_header   X-User-ID         $user_id;
        proxy_set_header   X-User-Email      $user_email;
        proxy_ssl_server_name on;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status": "OK"}';
        add_header Content-Type application/json;
    }

    location / {
        access_log off;
        return 200 '{"status": "OK"}';
        add_header Content-Type application/json;
    }

    # Manejo de errores
    error_page 502 /502.json;
    location = /502.json {
        return 502 '{"error": "Bad Gateway", "message": "The service is temporarily unavailable"}';
        add_header Content-Type application/json;
    }
}